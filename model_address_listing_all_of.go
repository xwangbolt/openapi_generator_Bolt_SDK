/*
Bolt API Reference

A comprehensive Bolt API reference for interacting with Transactions, Orders, Product Catalog, Configuration, Testing, and much more.

API version: 3.0.1
Contact: api-help@bolt.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// checks if the AddressListingAllOf type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &AddressListingAllOf{}

// AddressListingAllOf struct for AddressListingAllOf
type AddressListingAllOf struct {
	IsDefault *bool `json:"is_default,omitempty"`
}

// NewAddressListingAllOf instantiates a new AddressListingAllOf object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewAddressListingAllOf() *AddressListingAllOf {
	this := AddressListingAllOf{}
	return &this
}

// NewAddressListingAllOfWithDefaults instantiates a new AddressListingAllOf object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewAddressListingAllOfWithDefaults() *AddressListingAllOf {
	this := AddressListingAllOf{}
	return &this
}

// GetIsDefault returns the IsDefault field value if set, zero value otherwise.
func (o *AddressListingAllOf) GetIsDefault() bool {
	if o == nil || IsNil(o.IsDefault) {
		var ret bool
		return ret
	}
	return *o.IsDefault
}

// GetIsDefaultOk returns a tuple with the IsDefault field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AddressListingAllOf) GetIsDefaultOk() (*bool, bool) {
	if o == nil || IsNil(o.IsDefault) {
		return nil, false
	}
	return o.IsDefault, true
}

// HasIsDefault returns a boolean if a field has been set.
func (o *AddressListingAllOf) HasIsDefault() bool {
	if o != nil && !IsNil(o.IsDefault) {
		return true
	}

	return false
}

// SetIsDefault gets a reference to the given bool and assigns it to the IsDefault field.
func (o *AddressListingAllOf) SetIsDefault(v bool) {
	o.IsDefault = &v
}

func (o AddressListingAllOf) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o AddressListingAllOf) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.IsDefault) {
		toSerialize["is_default"] = o.IsDefault
	}
	return toSerialize, nil
}

type NullableAddressListingAllOf struct {
	value *AddressListingAllOf
	isSet bool
}

func (v NullableAddressListingAllOf) Get() *AddressListingAllOf {
	return v.value
}

func (v *NullableAddressListingAllOf) Set(val *AddressListingAllOf) {
	v.value = val
	v.isSet = true
}

func (v NullableAddressListingAllOf) IsSet() bool {
	return v.isSet
}

func (v *NullableAddressListingAllOf) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableAddressListingAllOf(val *AddressListingAllOf) *NullableAddressListingAllOf {
	return &NullableAddressListingAllOf{value: val, isSet: true}
}

func (v NullableAddressListingAllOf) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableAddressListingAllOf) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


