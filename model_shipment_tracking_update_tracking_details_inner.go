/*
Bolt API Reference

A comprehensive Bolt API reference for interacting with Transactions, Orders, Product Catalog, Configuration, Testing, and much more.

API version: 3.0.1
Contact: api-help@bolt.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// checks if the ShipmentTrackingUpdateTrackingDetailsInner type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &ShipmentTrackingUpdateTrackingDetailsInner{}

// ShipmentTrackingUpdateTrackingDetailsInner struct for ShipmentTrackingUpdateTrackingDetailsInner
type ShipmentTrackingUpdateTrackingDetailsInner struct {
	// The tracking detail's timestamp.
	EventDate *string `json:"event_date,omitempty"`
	Status *string `json:"status,omitempty"`
	// An arbitrary, human-readable message associated with this set of tracking details.
	Message *string `json:"message,omitempty"`
	// The locality associated this this set of tracking details, if any.
	Locality *string `json:"locality,omitempty"`
	// The region associated this this set of tracking details, if any.
	Region *string `json:"region,omitempty"`
	// The postal associated this this set of tracking details, if any.
	PostalCode *string `json:"postal_code,omitempty"`
	// The country associated this this set of tracking details, if any.
	CountryCode *string `json:"country_code,omitempty"`
}

// NewShipmentTrackingUpdateTrackingDetailsInner instantiates a new ShipmentTrackingUpdateTrackingDetailsInner object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewShipmentTrackingUpdateTrackingDetailsInner() *ShipmentTrackingUpdateTrackingDetailsInner {
	this := ShipmentTrackingUpdateTrackingDetailsInner{}
	return &this
}

// NewShipmentTrackingUpdateTrackingDetailsInnerWithDefaults instantiates a new ShipmentTrackingUpdateTrackingDetailsInner object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewShipmentTrackingUpdateTrackingDetailsInnerWithDefaults() *ShipmentTrackingUpdateTrackingDetailsInner {
	this := ShipmentTrackingUpdateTrackingDetailsInner{}
	return &this
}

// GetEventDate returns the EventDate field value if set, zero value otherwise.
func (o *ShipmentTrackingUpdateTrackingDetailsInner) GetEventDate() string {
	if o == nil || IsNil(o.EventDate) {
		var ret string
		return ret
	}
	return *o.EventDate
}

// GetEventDateOk returns a tuple with the EventDate field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ShipmentTrackingUpdateTrackingDetailsInner) GetEventDateOk() (*string, bool) {
	if o == nil || IsNil(o.EventDate) {
		return nil, false
	}
	return o.EventDate, true
}

// HasEventDate returns a boolean if a field has been set.
func (o *ShipmentTrackingUpdateTrackingDetailsInner) HasEventDate() bool {
	if o != nil && !IsNil(o.EventDate) {
		return true
	}

	return false
}

// SetEventDate gets a reference to the given string and assigns it to the EventDate field.
func (o *ShipmentTrackingUpdateTrackingDetailsInner) SetEventDate(v string) {
	o.EventDate = &v
}

// GetStatus returns the Status field value if set, zero value otherwise.
func (o *ShipmentTrackingUpdateTrackingDetailsInner) GetStatus() string {
	if o == nil || IsNil(o.Status) {
		var ret string
		return ret
	}
	return *o.Status
}

// GetStatusOk returns a tuple with the Status field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ShipmentTrackingUpdateTrackingDetailsInner) GetStatusOk() (*string, bool) {
	if o == nil || IsNil(o.Status) {
		return nil, false
	}
	return o.Status, true
}

// HasStatus returns a boolean if a field has been set.
func (o *ShipmentTrackingUpdateTrackingDetailsInner) HasStatus() bool {
	if o != nil && !IsNil(o.Status) {
		return true
	}

	return false
}

// SetStatus gets a reference to the given string and assigns it to the Status field.
func (o *ShipmentTrackingUpdateTrackingDetailsInner) SetStatus(v string) {
	o.Status = &v
}

// GetMessage returns the Message field value if set, zero value otherwise.
func (o *ShipmentTrackingUpdateTrackingDetailsInner) GetMessage() string {
	if o == nil || IsNil(o.Message) {
		var ret string
		return ret
	}
	return *o.Message
}

// GetMessageOk returns a tuple with the Message field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ShipmentTrackingUpdateTrackingDetailsInner) GetMessageOk() (*string, bool) {
	if o == nil || IsNil(o.Message) {
		return nil, false
	}
	return o.Message, true
}

// HasMessage returns a boolean if a field has been set.
func (o *ShipmentTrackingUpdateTrackingDetailsInner) HasMessage() bool {
	if o != nil && !IsNil(o.Message) {
		return true
	}

	return false
}

// SetMessage gets a reference to the given string and assigns it to the Message field.
func (o *ShipmentTrackingUpdateTrackingDetailsInner) SetMessage(v string) {
	o.Message = &v
}

// GetLocality returns the Locality field value if set, zero value otherwise.
func (o *ShipmentTrackingUpdateTrackingDetailsInner) GetLocality() string {
	if o == nil || IsNil(o.Locality) {
		var ret string
		return ret
	}
	return *o.Locality
}

// GetLocalityOk returns a tuple with the Locality field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ShipmentTrackingUpdateTrackingDetailsInner) GetLocalityOk() (*string, bool) {
	if o == nil || IsNil(o.Locality) {
		return nil, false
	}
	return o.Locality, true
}

// HasLocality returns a boolean if a field has been set.
func (o *ShipmentTrackingUpdateTrackingDetailsInner) HasLocality() bool {
	if o != nil && !IsNil(o.Locality) {
		return true
	}

	return false
}

// SetLocality gets a reference to the given string and assigns it to the Locality field.
func (o *ShipmentTrackingUpdateTrackingDetailsInner) SetLocality(v string) {
	o.Locality = &v
}

// GetRegion returns the Region field value if set, zero value otherwise.
func (o *ShipmentTrackingUpdateTrackingDetailsInner) GetRegion() string {
	if o == nil || IsNil(o.Region) {
		var ret string
		return ret
	}
	return *o.Region
}

// GetRegionOk returns a tuple with the Region field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ShipmentTrackingUpdateTrackingDetailsInner) GetRegionOk() (*string, bool) {
	if o == nil || IsNil(o.Region) {
		return nil, false
	}
	return o.Region, true
}

// HasRegion returns a boolean if a field has been set.
func (o *ShipmentTrackingUpdateTrackingDetailsInner) HasRegion() bool {
	if o != nil && !IsNil(o.Region) {
		return true
	}

	return false
}

// SetRegion gets a reference to the given string and assigns it to the Region field.
func (o *ShipmentTrackingUpdateTrackingDetailsInner) SetRegion(v string) {
	o.Region = &v
}

// GetPostalCode returns the PostalCode field value if set, zero value otherwise.
func (o *ShipmentTrackingUpdateTrackingDetailsInner) GetPostalCode() string {
	if o == nil || IsNil(o.PostalCode) {
		var ret string
		return ret
	}
	return *o.PostalCode
}

// GetPostalCodeOk returns a tuple with the PostalCode field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ShipmentTrackingUpdateTrackingDetailsInner) GetPostalCodeOk() (*string, bool) {
	if o == nil || IsNil(o.PostalCode) {
		return nil, false
	}
	return o.PostalCode, true
}

// HasPostalCode returns a boolean if a field has been set.
func (o *ShipmentTrackingUpdateTrackingDetailsInner) HasPostalCode() bool {
	if o != nil && !IsNil(o.PostalCode) {
		return true
	}

	return false
}

// SetPostalCode gets a reference to the given string and assigns it to the PostalCode field.
func (o *ShipmentTrackingUpdateTrackingDetailsInner) SetPostalCode(v string) {
	o.PostalCode = &v
}

// GetCountryCode returns the CountryCode field value if set, zero value otherwise.
func (o *ShipmentTrackingUpdateTrackingDetailsInner) GetCountryCode() string {
	if o == nil || IsNil(o.CountryCode) {
		var ret string
		return ret
	}
	return *o.CountryCode
}

// GetCountryCodeOk returns a tuple with the CountryCode field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ShipmentTrackingUpdateTrackingDetailsInner) GetCountryCodeOk() (*string, bool) {
	if o == nil || IsNil(o.CountryCode) {
		return nil, false
	}
	return o.CountryCode, true
}

// HasCountryCode returns a boolean if a field has been set.
func (o *ShipmentTrackingUpdateTrackingDetailsInner) HasCountryCode() bool {
	if o != nil && !IsNil(o.CountryCode) {
		return true
	}

	return false
}

// SetCountryCode gets a reference to the given string and assigns it to the CountryCode field.
func (o *ShipmentTrackingUpdateTrackingDetailsInner) SetCountryCode(v string) {
	o.CountryCode = &v
}

func (o ShipmentTrackingUpdateTrackingDetailsInner) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o ShipmentTrackingUpdateTrackingDetailsInner) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.EventDate) {
		toSerialize["event_date"] = o.EventDate
	}
	if !IsNil(o.Status) {
		toSerialize["status"] = o.Status
	}
	if !IsNil(o.Message) {
		toSerialize["message"] = o.Message
	}
	if !IsNil(o.Locality) {
		toSerialize["locality"] = o.Locality
	}
	if !IsNil(o.Region) {
		toSerialize["region"] = o.Region
	}
	if !IsNil(o.PostalCode) {
		toSerialize["postal_code"] = o.PostalCode
	}
	if !IsNil(o.CountryCode) {
		toSerialize["country_code"] = o.CountryCode
	}
	return toSerialize, nil
}

type NullableShipmentTrackingUpdateTrackingDetailsInner struct {
	value *ShipmentTrackingUpdateTrackingDetailsInner
	isSet bool
}

func (v NullableShipmentTrackingUpdateTrackingDetailsInner) Get() *ShipmentTrackingUpdateTrackingDetailsInner {
	return v.value
}

func (v *NullableShipmentTrackingUpdateTrackingDetailsInner) Set(val *ShipmentTrackingUpdateTrackingDetailsInner) {
	v.value = val
	v.isSet = true
}

func (v NullableShipmentTrackingUpdateTrackingDetailsInner) IsSet() bool {
	return v.isSet
}

func (v *NullableShipmentTrackingUpdateTrackingDetailsInner) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableShipmentTrackingUpdateTrackingDetailsInner(val *ShipmentTrackingUpdateTrackingDetailsInner) *NullableShipmentTrackingUpdateTrackingDetailsInner {
	return &NullableShipmentTrackingUpdateTrackingDetailsInner{value: val, isSet: true}
}

func (v NullableShipmentTrackingUpdateTrackingDetailsInner) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableShipmentTrackingUpdateTrackingDetailsInner) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


