/*
Bolt API Reference

A comprehensive Bolt API reference for interacting with Transactions, Orders, Product Catalog, Configuration, Testing, and much more.

API version: 3.0.1
Contact: api-help@bolt.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// checks if the CallbackUrls type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &CallbackUrls{}

// CallbackUrls struct for CallbackUrls
type CallbackUrls struct {
	OauthRedirect *string `json:"oauth_redirect,omitempty"`
	OauthLogout *string `json:"oauth_logout,omitempty"`
	GetAccount *string `json:"get_account,omitempty"`
	CreateOrder *string `json:"create_order,omitempty"`
	UniversalMerchantApi *string `json:"universal_merchant_api,omitempty"`
	Shipping *string `json:"shipping,omitempty"`
	Tax *string `json:"tax,omitempty"`
	UpdateCart *string `json:"update_cart,omitempty"`
	Debug *string `json:"debug,omitempty"`
	RemoteApi *string `json:"remote_api,omitempty"`
	ProductInfo *string `json:"product_info,omitempty"`
	SupportPage *string `json:"support_page,omitempty"`
	AccountPage *string `json:"account_page,omitempty"`
	MobileAppDomain *string `json:"mobile_app_domain,omitempty"`
	ValidateAdditionalAccountData *string `json:"validate_additional_account_data,omitempty"`
	TermsOfService *string `json:"terms_of_service,omitempty"`
	PrivacyPolicy *string `json:"privacy_policy,omitempty"`
	BaseDomain *string `json:"base_domain,omitempty"`
	ConfirmationRedirect *string `json:"confirmation_redirect,omitempty"`
}

// NewCallbackUrls instantiates a new CallbackUrls object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewCallbackUrls() *CallbackUrls {
	this := CallbackUrls{}
	return &this
}

// NewCallbackUrlsWithDefaults instantiates a new CallbackUrls object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewCallbackUrlsWithDefaults() *CallbackUrls {
	this := CallbackUrls{}
	return &this
}

// GetOauthRedirect returns the OauthRedirect field value if set, zero value otherwise.
func (o *CallbackUrls) GetOauthRedirect() string {
	if o == nil || IsNil(o.OauthRedirect) {
		var ret string
		return ret
	}
	return *o.OauthRedirect
}

// GetOauthRedirectOk returns a tuple with the OauthRedirect field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CallbackUrls) GetOauthRedirectOk() (*string, bool) {
	if o == nil || IsNil(o.OauthRedirect) {
		return nil, false
	}
	return o.OauthRedirect, true
}

// HasOauthRedirect returns a boolean if a field has been set.
func (o *CallbackUrls) HasOauthRedirect() bool {
	if o != nil && !IsNil(o.OauthRedirect) {
		return true
	}

	return false
}

// SetOauthRedirect gets a reference to the given string and assigns it to the OauthRedirect field.
func (o *CallbackUrls) SetOauthRedirect(v string) {
	o.OauthRedirect = &v
}

// GetOauthLogout returns the OauthLogout field value if set, zero value otherwise.
func (o *CallbackUrls) GetOauthLogout() string {
	if o == nil || IsNil(o.OauthLogout) {
		var ret string
		return ret
	}
	return *o.OauthLogout
}

// GetOauthLogoutOk returns a tuple with the OauthLogout field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CallbackUrls) GetOauthLogoutOk() (*string, bool) {
	if o == nil || IsNil(o.OauthLogout) {
		return nil, false
	}
	return o.OauthLogout, true
}

// HasOauthLogout returns a boolean if a field has been set.
func (o *CallbackUrls) HasOauthLogout() bool {
	if o != nil && !IsNil(o.OauthLogout) {
		return true
	}

	return false
}

// SetOauthLogout gets a reference to the given string and assigns it to the OauthLogout field.
func (o *CallbackUrls) SetOauthLogout(v string) {
	o.OauthLogout = &v
}

// GetGetAccount returns the GetAccount field value if set, zero value otherwise.
func (o *CallbackUrls) GetGetAccount() string {
	if o == nil || IsNil(o.GetAccount) {
		var ret string
		return ret
	}
	return *o.GetAccount
}

// GetGetAccountOk returns a tuple with the GetAccount field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CallbackUrls) GetGetAccountOk() (*string, bool) {
	if o == nil || IsNil(o.GetAccount) {
		return nil, false
	}
	return o.GetAccount, true
}

// HasGetAccount returns a boolean if a field has been set.
func (o *CallbackUrls) HasGetAccount() bool {
	if o != nil && !IsNil(o.GetAccount) {
		return true
	}

	return false
}

// SetGetAccount gets a reference to the given string and assigns it to the GetAccount field.
func (o *CallbackUrls) SetGetAccount(v string) {
	o.GetAccount = &v
}

// GetCreateOrder returns the CreateOrder field value if set, zero value otherwise.
func (o *CallbackUrls) GetCreateOrder() string {
	if o == nil || IsNil(o.CreateOrder) {
		var ret string
		return ret
	}
	return *o.CreateOrder
}

// GetCreateOrderOk returns a tuple with the CreateOrder field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CallbackUrls) GetCreateOrderOk() (*string, bool) {
	if o == nil || IsNil(o.CreateOrder) {
		return nil, false
	}
	return o.CreateOrder, true
}

// HasCreateOrder returns a boolean if a field has been set.
func (o *CallbackUrls) HasCreateOrder() bool {
	if o != nil && !IsNil(o.CreateOrder) {
		return true
	}

	return false
}

// SetCreateOrder gets a reference to the given string and assigns it to the CreateOrder field.
func (o *CallbackUrls) SetCreateOrder(v string) {
	o.CreateOrder = &v
}

// GetUniversalMerchantApi returns the UniversalMerchantApi field value if set, zero value otherwise.
func (o *CallbackUrls) GetUniversalMerchantApi() string {
	if o == nil || IsNil(o.UniversalMerchantApi) {
		var ret string
		return ret
	}
	return *o.UniversalMerchantApi
}

// GetUniversalMerchantApiOk returns a tuple with the UniversalMerchantApi field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CallbackUrls) GetUniversalMerchantApiOk() (*string, bool) {
	if o == nil || IsNil(o.UniversalMerchantApi) {
		return nil, false
	}
	return o.UniversalMerchantApi, true
}

// HasUniversalMerchantApi returns a boolean if a field has been set.
func (o *CallbackUrls) HasUniversalMerchantApi() bool {
	if o != nil && !IsNil(o.UniversalMerchantApi) {
		return true
	}

	return false
}

// SetUniversalMerchantApi gets a reference to the given string and assigns it to the UniversalMerchantApi field.
func (o *CallbackUrls) SetUniversalMerchantApi(v string) {
	o.UniversalMerchantApi = &v
}

// GetShipping returns the Shipping field value if set, zero value otherwise.
func (o *CallbackUrls) GetShipping() string {
	if o == nil || IsNil(o.Shipping) {
		var ret string
		return ret
	}
	return *o.Shipping
}

// GetShippingOk returns a tuple with the Shipping field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CallbackUrls) GetShippingOk() (*string, bool) {
	if o == nil || IsNil(o.Shipping) {
		return nil, false
	}
	return o.Shipping, true
}

// HasShipping returns a boolean if a field has been set.
func (o *CallbackUrls) HasShipping() bool {
	if o != nil && !IsNil(o.Shipping) {
		return true
	}

	return false
}

// SetShipping gets a reference to the given string and assigns it to the Shipping field.
func (o *CallbackUrls) SetShipping(v string) {
	o.Shipping = &v
}

// GetTax returns the Tax field value if set, zero value otherwise.
func (o *CallbackUrls) GetTax() string {
	if o == nil || IsNil(o.Tax) {
		var ret string
		return ret
	}
	return *o.Tax
}

// GetTaxOk returns a tuple with the Tax field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CallbackUrls) GetTaxOk() (*string, bool) {
	if o == nil || IsNil(o.Tax) {
		return nil, false
	}
	return o.Tax, true
}

// HasTax returns a boolean if a field has been set.
func (o *CallbackUrls) HasTax() bool {
	if o != nil && !IsNil(o.Tax) {
		return true
	}

	return false
}

// SetTax gets a reference to the given string and assigns it to the Tax field.
func (o *CallbackUrls) SetTax(v string) {
	o.Tax = &v
}

// GetUpdateCart returns the UpdateCart field value if set, zero value otherwise.
func (o *CallbackUrls) GetUpdateCart() string {
	if o == nil || IsNil(o.UpdateCart) {
		var ret string
		return ret
	}
	return *o.UpdateCart
}

// GetUpdateCartOk returns a tuple with the UpdateCart field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CallbackUrls) GetUpdateCartOk() (*string, bool) {
	if o == nil || IsNil(o.UpdateCart) {
		return nil, false
	}
	return o.UpdateCart, true
}

// HasUpdateCart returns a boolean if a field has been set.
func (o *CallbackUrls) HasUpdateCart() bool {
	if o != nil && !IsNil(o.UpdateCart) {
		return true
	}

	return false
}

// SetUpdateCart gets a reference to the given string and assigns it to the UpdateCart field.
func (o *CallbackUrls) SetUpdateCart(v string) {
	o.UpdateCart = &v
}

// GetDebug returns the Debug field value if set, zero value otherwise.
func (o *CallbackUrls) GetDebug() string {
	if o == nil || IsNil(o.Debug) {
		var ret string
		return ret
	}
	return *o.Debug
}

// GetDebugOk returns a tuple with the Debug field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CallbackUrls) GetDebugOk() (*string, bool) {
	if o == nil || IsNil(o.Debug) {
		return nil, false
	}
	return o.Debug, true
}

// HasDebug returns a boolean if a field has been set.
func (o *CallbackUrls) HasDebug() bool {
	if o != nil && !IsNil(o.Debug) {
		return true
	}

	return false
}

// SetDebug gets a reference to the given string and assigns it to the Debug field.
func (o *CallbackUrls) SetDebug(v string) {
	o.Debug = &v
}

// GetRemoteApi returns the RemoteApi field value if set, zero value otherwise.
func (o *CallbackUrls) GetRemoteApi() string {
	if o == nil || IsNil(o.RemoteApi) {
		var ret string
		return ret
	}
	return *o.RemoteApi
}

// GetRemoteApiOk returns a tuple with the RemoteApi field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CallbackUrls) GetRemoteApiOk() (*string, bool) {
	if o == nil || IsNil(o.RemoteApi) {
		return nil, false
	}
	return o.RemoteApi, true
}

// HasRemoteApi returns a boolean if a field has been set.
func (o *CallbackUrls) HasRemoteApi() bool {
	if o != nil && !IsNil(o.RemoteApi) {
		return true
	}

	return false
}

// SetRemoteApi gets a reference to the given string and assigns it to the RemoteApi field.
func (o *CallbackUrls) SetRemoteApi(v string) {
	o.RemoteApi = &v
}

// GetProductInfo returns the ProductInfo field value if set, zero value otherwise.
func (o *CallbackUrls) GetProductInfo() string {
	if o == nil || IsNil(o.ProductInfo) {
		var ret string
		return ret
	}
	return *o.ProductInfo
}

// GetProductInfoOk returns a tuple with the ProductInfo field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CallbackUrls) GetProductInfoOk() (*string, bool) {
	if o == nil || IsNil(o.ProductInfo) {
		return nil, false
	}
	return o.ProductInfo, true
}

// HasProductInfo returns a boolean if a field has been set.
func (o *CallbackUrls) HasProductInfo() bool {
	if o != nil && !IsNil(o.ProductInfo) {
		return true
	}

	return false
}

// SetProductInfo gets a reference to the given string and assigns it to the ProductInfo field.
func (o *CallbackUrls) SetProductInfo(v string) {
	o.ProductInfo = &v
}

// GetSupportPage returns the SupportPage field value if set, zero value otherwise.
func (o *CallbackUrls) GetSupportPage() string {
	if o == nil || IsNil(o.SupportPage) {
		var ret string
		return ret
	}
	return *o.SupportPage
}

// GetSupportPageOk returns a tuple with the SupportPage field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CallbackUrls) GetSupportPageOk() (*string, bool) {
	if o == nil || IsNil(o.SupportPage) {
		return nil, false
	}
	return o.SupportPage, true
}

// HasSupportPage returns a boolean if a field has been set.
func (o *CallbackUrls) HasSupportPage() bool {
	if o != nil && !IsNil(o.SupportPage) {
		return true
	}

	return false
}

// SetSupportPage gets a reference to the given string and assigns it to the SupportPage field.
func (o *CallbackUrls) SetSupportPage(v string) {
	o.SupportPage = &v
}

// GetAccountPage returns the AccountPage field value if set, zero value otherwise.
func (o *CallbackUrls) GetAccountPage() string {
	if o == nil || IsNil(o.AccountPage) {
		var ret string
		return ret
	}
	return *o.AccountPage
}

// GetAccountPageOk returns a tuple with the AccountPage field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CallbackUrls) GetAccountPageOk() (*string, bool) {
	if o == nil || IsNil(o.AccountPage) {
		return nil, false
	}
	return o.AccountPage, true
}

// HasAccountPage returns a boolean if a field has been set.
func (o *CallbackUrls) HasAccountPage() bool {
	if o != nil && !IsNil(o.AccountPage) {
		return true
	}

	return false
}

// SetAccountPage gets a reference to the given string and assigns it to the AccountPage field.
func (o *CallbackUrls) SetAccountPage(v string) {
	o.AccountPage = &v
}

// GetMobileAppDomain returns the MobileAppDomain field value if set, zero value otherwise.
func (o *CallbackUrls) GetMobileAppDomain() string {
	if o == nil || IsNil(o.MobileAppDomain) {
		var ret string
		return ret
	}
	return *o.MobileAppDomain
}

// GetMobileAppDomainOk returns a tuple with the MobileAppDomain field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CallbackUrls) GetMobileAppDomainOk() (*string, bool) {
	if o == nil || IsNil(o.MobileAppDomain) {
		return nil, false
	}
	return o.MobileAppDomain, true
}

// HasMobileAppDomain returns a boolean if a field has been set.
func (o *CallbackUrls) HasMobileAppDomain() bool {
	if o != nil && !IsNil(o.MobileAppDomain) {
		return true
	}

	return false
}

// SetMobileAppDomain gets a reference to the given string and assigns it to the MobileAppDomain field.
func (o *CallbackUrls) SetMobileAppDomain(v string) {
	o.MobileAppDomain = &v
}

// GetValidateAdditionalAccountData returns the ValidateAdditionalAccountData field value if set, zero value otherwise.
func (o *CallbackUrls) GetValidateAdditionalAccountData() string {
	if o == nil || IsNil(o.ValidateAdditionalAccountData) {
		var ret string
		return ret
	}
	return *o.ValidateAdditionalAccountData
}

// GetValidateAdditionalAccountDataOk returns a tuple with the ValidateAdditionalAccountData field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CallbackUrls) GetValidateAdditionalAccountDataOk() (*string, bool) {
	if o == nil || IsNil(o.ValidateAdditionalAccountData) {
		return nil, false
	}
	return o.ValidateAdditionalAccountData, true
}

// HasValidateAdditionalAccountData returns a boolean if a field has been set.
func (o *CallbackUrls) HasValidateAdditionalAccountData() bool {
	if o != nil && !IsNil(o.ValidateAdditionalAccountData) {
		return true
	}

	return false
}

// SetValidateAdditionalAccountData gets a reference to the given string and assigns it to the ValidateAdditionalAccountData field.
func (o *CallbackUrls) SetValidateAdditionalAccountData(v string) {
	o.ValidateAdditionalAccountData = &v
}

// GetTermsOfService returns the TermsOfService field value if set, zero value otherwise.
func (o *CallbackUrls) GetTermsOfService() string {
	if o == nil || IsNil(o.TermsOfService) {
		var ret string
		return ret
	}
	return *o.TermsOfService
}

// GetTermsOfServiceOk returns a tuple with the TermsOfService field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CallbackUrls) GetTermsOfServiceOk() (*string, bool) {
	if o == nil || IsNil(o.TermsOfService) {
		return nil, false
	}
	return o.TermsOfService, true
}

// HasTermsOfService returns a boolean if a field has been set.
func (o *CallbackUrls) HasTermsOfService() bool {
	if o != nil && !IsNil(o.TermsOfService) {
		return true
	}

	return false
}

// SetTermsOfService gets a reference to the given string and assigns it to the TermsOfService field.
func (o *CallbackUrls) SetTermsOfService(v string) {
	o.TermsOfService = &v
}

// GetPrivacyPolicy returns the PrivacyPolicy field value if set, zero value otherwise.
func (o *CallbackUrls) GetPrivacyPolicy() string {
	if o == nil || IsNil(o.PrivacyPolicy) {
		var ret string
		return ret
	}
	return *o.PrivacyPolicy
}

// GetPrivacyPolicyOk returns a tuple with the PrivacyPolicy field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CallbackUrls) GetPrivacyPolicyOk() (*string, bool) {
	if o == nil || IsNil(o.PrivacyPolicy) {
		return nil, false
	}
	return o.PrivacyPolicy, true
}

// HasPrivacyPolicy returns a boolean if a field has been set.
func (o *CallbackUrls) HasPrivacyPolicy() bool {
	if o != nil && !IsNil(o.PrivacyPolicy) {
		return true
	}

	return false
}

// SetPrivacyPolicy gets a reference to the given string and assigns it to the PrivacyPolicy field.
func (o *CallbackUrls) SetPrivacyPolicy(v string) {
	o.PrivacyPolicy = &v
}

// GetBaseDomain returns the BaseDomain field value if set, zero value otherwise.
func (o *CallbackUrls) GetBaseDomain() string {
	if o == nil || IsNil(o.BaseDomain) {
		var ret string
		return ret
	}
	return *o.BaseDomain
}

// GetBaseDomainOk returns a tuple with the BaseDomain field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CallbackUrls) GetBaseDomainOk() (*string, bool) {
	if o == nil || IsNil(o.BaseDomain) {
		return nil, false
	}
	return o.BaseDomain, true
}

// HasBaseDomain returns a boolean if a field has been set.
func (o *CallbackUrls) HasBaseDomain() bool {
	if o != nil && !IsNil(o.BaseDomain) {
		return true
	}

	return false
}

// SetBaseDomain gets a reference to the given string and assigns it to the BaseDomain field.
func (o *CallbackUrls) SetBaseDomain(v string) {
	o.BaseDomain = &v
}

// GetConfirmationRedirect returns the ConfirmationRedirect field value if set, zero value otherwise.
func (o *CallbackUrls) GetConfirmationRedirect() string {
	if o == nil || IsNil(o.ConfirmationRedirect) {
		var ret string
		return ret
	}
	return *o.ConfirmationRedirect
}

// GetConfirmationRedirectOk returns a tuple with the ConfirmationRedirect field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CallbackUrls) GetConfirmationRedirectOk() (*string, bool) {
	if o == nil || IsNil(o.ConfirmationRedirect) {
		return nil, false
	}
	return o.ConfirmationRedirect, true
}

// HasConfirmationRedirect returns a boolean if a field has been set.
func (o *CallbackUrls) HasConfirmationRedirect() bool {
	if o != nil && !IsNil(o.ConfirmationRedirect) {
		return true
	}

	return false
}

// SetConfirmationRedirect gets a reference to the given string and assigns it to the ConfirmationRedirect field.
func (o *CallbackUrls) SetConfirmationRedirect(v string) {
	o.ConfirmationRedirect = &v
}

func (o CallbackUrls) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o CallbackUrls) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.OauthRedirect) {
		toSerialize["oauth_redirect"] = o.OauthRedirect
	}
	if !IsNil(o.OauthLogout) {
		toSerialize["oauth_logout"] = o.OauthLogout
	}
	if !IsNil(o.GetAccount) {
		toSerialize["get_account"] = o.GetAccount
	}
	if !IsNil(o.CreateOrder) {
		toSerialize["create_order"] = o.CreateOrder
	}
	if !IsNil(o.UniversalMerchantApi) {
		toSerialize["universal_merchant_api"] = o.UniversalMerchantApi
	}
	if !IsNil(o.Shipping) {
		toSerialize["shipping"] = o.Shipping
	}
	if !IsNil(o.Tax) {
		toSerialize["tax"] = o.Tax
	}
	if !IsNil(o.UpdateCart) {
		toSerialize["update_cart"] = o.UpdateCart
	}
	if !IsNil(o.Debug) {
		toSerialize["debug"] = o.Debug
	}
	if !IsNil(o.RemoteApi) {
		toSerialize["remote_api"] = o.RemoteApi
	}
	if !IsNil(o.ProductInfo) {
		toSerialize["product_info"] = o.ProductInfo
	}
	if !IsNil(o.SupportPage) {
		toSerialize["support_page"] = o.SupportPage
	}
	if !IsNil(o.AccountPage) {
		toSerialize["account_page"] = o.AccountPage
	}
	if !IsNil(o.MobileAppDomain) {
		toSerialize["mobile_app_domain"] = o.MobileAppDomain
	}
	if !IsNil(o.ValidateAdditionalAccountData) {
		toSerialize["validate_additional_account_data"] = o.ValidateAdditionalAccountData
	}
	if !IsNil(o.TermsOfService) {
		toSerialize["terms_of_service"] = o.TermsOfService
	}
	if !IsNil(o.PrivacyPolicy) {
		toSerialize["privacy_policy"] = o.PrivacyPolicy
	}
	if !IsNil(o.BaseDomain) {
		toSerialize["base_domain"] = o.BaseDomain
	}
	if !IsNil(o.ConfirmationRedirect) {
		toSerialize["confirmation_redirect"] = o.ConfirmationRedirect
	}
	return toSerialize, nil
}

type NullableCallbackUrls struct {
	value *CallbackUrls
	isSet bool
}

func (v NullableCallbackUrls) Get() *CallbackUrls {
	return v.value
}

func (v *NullableCallbackUrls) Set(val *CallbackUrls) {
	v.value = val
	v.isSet = true
}

func (v NullableCallbackUrls) IsSet() bool {
	return v.isSet
}

func (v *NullableCallbackUrls) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableCallbackUrls(val *CallbackUrls) *NullableCallbackUrls {
	return &NullableCallbackUrls{value: val, isSet: true}
}

func (v NullableCallbackUrls) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableCallbackUrls) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


