/*
Bolt API Reference

A comprehensive Bolt API reference for interacting with Transactions, Orders, Product Catalog, Configuration, Testing, and much more.

API version: 3.0.1
Contact: api-help@bolt.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// checks if the CartShipment type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &CartShipment{}

// CartShipment struct for CartShipment
type CartShipment struct {
	Address *AddressReference `json:"address,omitempty"`
	Cost *Amounts `json:"cost,omitempty"`
	// The name of the carrier selected.
	Carrier *string `json:"carrier,omitempty"`
}

// NewCartShipment instantiates a new CartShipment object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewCartShipment() *CartShipment {
	this := CartShipment{}
	return &this
}

// NewCartShipmentWithDefaults instantiates a new CartShipment object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewCartShipmentWithDefaults() *CartShipment {
	this := CartShipment{}
	return &this
}

// GetAddress returns the Address field value if set, zero value otherwise.
func (o *CartShipment) GetAddress() AddressReference {
	if o == nil || IsNil(o.Address) {
		var ret AddressReference
		return ret
	}
	return *o.Address
}

// GetAddressOk returns a tuple with the Address field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CartShipment) GetAddressOk() (*AddressReference, bool) {
	if o == nil || IsNil(o.Address) {
		return nil, false
	}
	return o.Address, true
}

// HasAddress returns a boolean if a field has been set.
func (o *CartShipment) HasAddress() bool {
	if o != nil && !IsNil(o.Address) {
		return true
	}

	return false
}

// SetAddress gets a reference to the given AddressReference and assigns it to the Address field.
func (o *CartShipment) SetAddress(v AddressReference) {
	o.Address = &v
}

// GetCost returns the Cost field value if set, zero value otherwise.
func (o *CartShipment) GetCost() Amounts {
	if o == nil || IsNil(o.Cost) {
		var ret Amounts
		return ret
	}
	return *o.Cost
}

// GetCostOk returns a tuple with the Cost field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CartShipment) GetCostOk() (*Amounts, bool) {
	if o == nil || IsNil(o.Cost) {
		return nil, false
	}
	return o.Cost, true
}

// HasCost returns a boolean if a field has been set.
func (o *CartShipment) HasCost() bool {
	if o != nil && !IsNil(o.Cost) {
		return true
	}

	return false
}

// SetCost gets a reference to the given Amounts and assigns it to the Cost field.
func (o *CartShipment) SetCost(v Amounts) {
	o.Cost = &v
}

// GetCarrier returns the Carrier field value if set, zero value otherwise.
func (o *CartShipment) GetCarrier() string {
	if o == nil || IsNil(o.Carrier) {
		var ret string
		return ret
	}
	return *o.Carrier
}

// GetCarrierOk returns a tuple with the Carrier field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CartShipment) GetCarrierOk() (*string, bool) {
	if o == nil || IsNil(o.Carrier) {
		return nil, false
	}
	return o.Carrier, true
}

// HasCarrier returns a boolean if a field has been set.
func (o *CartShipment) HasCarrier() bool {
	if o != nil && !IsNil(o.Carrier) {
		return true
	}

	return false
}

// SetCarrier gets a reference to the given string and assigns it to the Carrier field.
func (o *CartShipment) SetCarrier(v string) {
	o.Carrier = &v
}

func (o CartShipment) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o CartShipment) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Address) {
		toSerialize["address"] = o.Address
	}
	if !IsNil(o.Cost) {
		toSerialize["cost"] = o.Cost
	}
	if !IsNil(o.Carrier) {
		toSerialize["carrier"] = o.Carrier
	}
	return toSerialize, nil
}

type NullableCartShipment struct {
	value *CartShipment
	isSet bool
}

func (v NullableCartShipment) Get() *CartShipment {
	return v.value
}

func (v *NullableCartShipment) Set(val *CartShipment) {
	v.value = val
	v.isSet = true
}

func (v NullableCartShipment) IsSet() bool {
	return v.isSet
}

func (v *NullableCartShipment) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableCartShipment(val *CartShipment) *NullableCartShipment {
	return &NullableCartShipment{value: val, isSet: true}
}

func (v NullableCartShipment) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableCartShipment) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


