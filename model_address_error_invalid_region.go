/*
Bolt API Reference

A comprehensive Bolt API reference for interacting with Transactions, Orders, Product Catalog, Configuration, Testing, and much more.

API version: 3.0.1
Contact: api-help@bolt.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// checks if the AddressErrorInvalidRegion type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &AddressErrorInvalidRegion{}

// AddressErrorInvalidRegion struct for AddressErrorInvalidRegion
type AddressErrorInvalidRegion struct {
	// The type of error returned
	Tag string `json:".tag"`
	// A human-readable error message, which might include information specific to the request that was made. 
	Message string `json:"message"`
}

// NewAddressErrorInvalidRegion instantiates a new AddressErrorInvalidRegion object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewAddressErrorInvalidRegion(tag string, message string) *AddressErrorInvalidRegion {
	this := AddressErrorInvalidRegion{}
	this.Tag = tag
	this.Message = message
	return &this
}

// NewAddressErrorInvalidRegionWithDefaults instantiates a new AddressErrorInvalidRegion object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewAddressErrorInvalidRegionWithDefaults() *AddressErrorInvalidRegion {
	this := AddressErrorInvalidRegion{}
	return &this
}

// GetTag returns the Tag field value
func (o *AddressErrorInvalidRegion) GetTag() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Tag
}

// GetTagOk returns a tuple with the Tag field value
// and a boolean to check if the value has been set.
func (o *AddressErrorInvalidRegion) GetTagOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Tag, true
}

// SetTag sets field value
func (o *AddressErrorInvalidRegion) SetTag(v string) {
	o.Tag = v
}

// GetMessage returns the Message field value
func (o *AddressErrorInvalidRegion) GetMessage() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Message
}

// GetMessageOk returns a tuple with the Message field value
// and a boolean to check if the value has been set.
func (o *AddressErrorInvalidRegion) GetMessageOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Message, true
}

// SetMessage sets field value
func (o *AddressErrorInvalidRegion) SetMessage(v string) {
	o.Message = v
}

func (o AddressErrorInvalidRegion) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o AddressErrorInvalidRegion) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize[".tag"] = o.Tag
	toSerialize["message"] = o.Message
	return toSerialize, nil
}

type NullableAddressErrorInvalidRegion struct {
	value *AddressErrorInvalidRegion
	isSet bool
}

func (v NullableAddressErrorInvalidRegion) Get() *AddressErrorInvalidRegion {
	return v.value
}

func (v *NullableAddressErrorInvalidRegion) Set(val *AddressErrorInvalidRegion) {
	v.value = val
	v.isSet = true
}

func (v NullableAddressErrorInvalidRegion) IsSet() bool {
	return v.isSet
}

func (v *NullableAddressErrorInvalidRegion) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableAddressErrorInvalidRegion(val *AddressErrorInvalidRegion) *NullableAddressErrorInvalidRegion {
	return &NullableAddressErrorInvalidRegion{value: val, isSet: true}
}

func (v NullableAddressErrorInvalidRegion) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableAddressErrorInvalidRegion) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


