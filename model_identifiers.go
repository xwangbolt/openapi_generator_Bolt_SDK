/*
Bolt API Reference

A comprehensive Bolt API reference for interacting with Transactions, Orders, Product Catalog, Configuration, Testing, and much more.

API version: 3.0.1
Contact: api-help@bolt.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// checks if the Identifiers type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &Identifiers{}

// Identifiers struct for Identifiers
type Identifiers struct {
	MerchantId string `json:"merchant_id"`
	MerchantDivisions []IdentifiersMerchantDivisionsInner `json:"merchant_divisions"`
	SigningSecret string `json:"signing_secret"`
}

// NewIdentifiers instantiates a new Identifiers object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewIdentifiers(merchantId string, merchantDivisions []IdentifiersMerchantDivisionsInner, signingSecret string) *Identifiers {
	this := Identifiers{}
	this.MerchantId = merchantId
	this.MerchantDivisions = merchantDivisions
	this.SigningSecret = signingSecret
	return &this
}

// NewIdentifiersWithDefaults instantiates a new Identifiers object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewIdentifiersWithDefaults() *Identifiers {
	this := Identifiers{}
	return &this
}

// GetMerchantId returns the MerchantId field value
func (o *Identifiers) GetMerchantId() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.MerchantId
}

// GetMerchantIdOk returns a tuple with the MerchantId field value
// and a boolean to check if the value has been set.
func (o *Identifiers) GetMerchantIdOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.MerchantId, true
}

// SetMerchantId sets field value
func (o *Identifiers) SetMerchantId(v string) {
	o.MerchantId = v
}

// GetMerchantDivisions returns the MerchantDivisions field value
func (o *Identifiers) GetMerchantDivisions() []IdentifiersMerchantDivisionsInner {
	if o == nil {
		var ret []IdentifiersMerchantDivisionsInner
		return ret
	}

	return o.MerchantDivisions
}

// GetMerchantDivisionsOk returns a tuple with the MerchantDivisions field value
// and a boolean to check if the value has been set.
func (o *Identifiers) GetMerchantDivisionsOk() ([]IdentifiersMerchantDivisionsInner, bool) {
	if o == nil {
		return nil, false
	}
	return o.MerchantDivisions, true
}

// SetMerchantDivisions sets field value
func (o *Identifiers) SetMerchantDivisions(v []IdentifiersMerchantDivisionsInner) {
	o.MerchantDivisions = v
}

// GetSigningSecret returns the SigningSecret field value
func (o *Identifiers) GetSigningSecret() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.SigningSecret
}

// GetSigningSecretOk returns a tuple with the SigningSecret field value
// and a boolean to check if the value has been set.
func (o *Identifiers) GetSigningSecretOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.SigningSecret, true
}

// SetSigningSecret sets field value
func (o *Identifiers) SetSigningSecret(v string) {
	o.SigningSecret = v
}

func (o Identifiers) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o Identifiers) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["merchant_id"] = o.MerchantId
	toSerialize["merchant_divisions"] = o.MerchantDivisions
	toSerialize["signing_secret"] = o.SigningSecret
	return toSerialize, nil
}

type NullableIdentifiers struct {
	value *Identifiers
	isSet bool
}

func (v NullableIdentifiers) Get() *Identifiers {
	return v.value
}

func (v *NullableIdentifiers) Set(val *Identifiers) {
	v.value = val
	v.isSet = true
}

func (v NullableIdentifiers) IsSet() bool {
	return v.isSet
}

func (v *NullableIdentifiers) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableIdentifiers(val *Identifiers) *NullableIdentifiers {
	return &NullableIdentifiers{value: val, isSet: true}
}

func (v NullableIdentifiers) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableIdentifiers) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


