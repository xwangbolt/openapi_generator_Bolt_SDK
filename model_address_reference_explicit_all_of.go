/*
Bolt API Reference

A comprehensive Bolt API reference for interacting with Transactions, Orders, Product Catalog, Configuration, Testing, and much more.

API version: 3.0.1
Contact: api-help@bolt.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// checks if the AddressReferenceExplicitAllOf type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &AddressReferenceExplicitAllOf{}

// AddressReferenceExplicitAllOf struct for AddressReferenceExplicitAllOf
type AddressReferenceExplicitAllOf struct {
	// The type of address reference
	Tag string `json:".tag"`
}

// NewAddressReferenceExplicitAllOf instantiates a new AddressReferenceExplicitAllOf object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewAddressReferenceExplicitAllOf(tag string) *AddressReferenceExplicitAllOf {
	this := AddressReferenceExplicitAllOf{}
	this.Tag = tag
	return &this
}

// NewAddressReferenceExplicitAllOfWithDefaults instantiates a new AddressReferenceExplicitAllOf object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewAddressReferenceExplicitAllOfWithDefaults() *AddressReferenceExplicitAllOf {
	this := AddressReferenceExplicitAllOf{}
	return &this
}

// GetTag returns the Tag field value
func (o *AddressReferenceExplicitAllOf) GetTag() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Tag
}

// GetTagOk returns a tuple with the Tag field value
// and a boolean to check if the value has been set.
func (o *AddressReferenceExplicitAllOf) GetTagOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Tag, true
}

// SetTag sets field value
func (o *AddressReferenceExplicitAllOf) SetTag(v string) {
	o.Tag = v
}

func (o AddressReferenceExplicitAllOf) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o AddressReferenceExplicitAllOf) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize[".tag"] = o.Tag
	return toSerialize, nil
}

type NullableAddressReferenceExplicitAllOf struct {
	value *AddressReferenceExplicitAllOf
	isSet bool
}

func (v NullableAddressReferenceExplicitAllOf) Get() *AddressReferenceExplicitAllOf {
	return v.value
}

func (v *NullableAddressReferenceExplicitAllOf) Set(val *AddressReferenceExplicitAllOf) {
	v.value = val
	v.isSet = true
}

func (v NullableAddressReferenceExplicitAllOf) IsSet() bool {
	return v.isSet
}

func (v *NullableAddressReferenceExplicitAllOf) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableAddressReferenceExplicitAllOf(val *AddressReferenceExplicitAllOf) *NullableAddressReferenceExplicitAllOf {
	return &NullableAddressReferenceExplicitAllOf{value: val, isSet: true}
}

func (v NullableAddressReferenceExplicitAllOf) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableAddressReferenceExplicitAllOf) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


